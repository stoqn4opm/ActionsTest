name: Code Coverage Check

on:
  workflow_dispatch:

jobs:
  pre-coverage:
    runs-on: [self-hosted, macos, xcode16, flutter]
    outputs:
      pre_coverage: ${{ steps.extract_coverage.outputs.coverage }}

    steps:
    # Checkout the base branch (pre-PR) using ref
    - name: Checkout base branch (pre-PR)
      uses: actions/checkout@v3
      with:
        ref: ${{ github.base_ref }}

    - name: Install lcov
      run: brew install lcov

    # Setup Path
    - name: Setup Path
      run: |
        echo "/usr/lib/dart/bin" >> $GITHUB_PATH
        echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH
        echo "/usr/local/bin" >> $GITHUB_PATH

    # Install Flutter
    - name: Install Flutter
      run: |
        dart pub global activate fvm
        fvm install
        
    # Install dependencies
    - name: Install dependencies
      run: fvm flutter pub get

    # Run code generation
    - name: Run code generation
      run: fvm flutter pub run build_runner build --delete-conflicting-outputs

    # Run tests and generate coverage
    - name: Run tests and generate coverage
      run: fvm flutter test --coverage

    # Extract coverage percentage and set as output
    - name: Extract coverage percentage
      id: extract_coverage
      run: |
        coverage=$(lcov --summary coverage/lcov.info 2>/dev/null | grep lines | awk '{print $4}' | sed 's/%//')
        if [[ -z "$coverage" ]]; then
          coverage=0
        fi
        echo "Coverage: $coverage%"
        echo "coverage=$coverage" >> $GITHUB_OUTPUT

  post-coverage:
    runs-on: [self-hosted, macos, xcode16, flutter]
    outputs:
      post_coverage: ${{ steps.extract_coverage.outputs.coverage }}

    steps:
    # Checkout the PR commit using ref
    - name: Checkout PR commit
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    - name: Install lcov
      run: brew install lcov

    # Setup Path
    - name: Setup Path
      run: |
        echo "/usr/lib/dart/bin" >> $GITHUB_PATH
        echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH
        echo "/usr/local/bin" >> $GITHUB_PATH

    # Install Flutter
    - name: Install Flutter
      run: |
        dart pub global activate fvm
        fvm install

    # Install dependencies
    - name: Install dependencies
      run: fvm flutter pub get

    # Run code generation
    - name: Run code generation
      run: fvm flutter pub run build_runner build --delete-conflicting-outputs

    # Run tests and generate coverage
    - name: Run tests and generate coverage
      run: fvm flutter test --coverage

    # Extract coverage percentage and set as output
    - name: Extract coverage percentage
      id: extract_coverage
      run: |
        coverage=$(lcov --summary coverage/lcov.info 2>/dev/null | grep lines | awk '{print $4}' | sed 's/%//')
        if [[ -z "$coverage" ]]; then
          coverage=0
        fi
        echo "Coverage: $coverage%"
        echo "coverage=$coverage" >> $GITHUB_OUTPUT

  compare-coverage:
    runs-on: ubuntu-latest
    needs: [pre-coverage, post-coverage]

    steps:
    - name: Compare code coverage
      run: |
        pre_coverage=${{ needs.pre-coverage.outputs.pre_coverage }}
        post_coverage=${{ needs.post-coverage.outputs.post_coverage }}
        echo "Pre-PR Coverage: $pre_coverage%"
        echo "Post-PR Coverage: $post_coverage%"
        if (( $(echo "$post_coverage < $pre_coverage" | bc -l) )); then
          echo "Code coverage has decreased! Failing the pipeline."
          exit 1
        fi
